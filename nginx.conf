# Based on configuration at https://fardog.io/blog/2017/12/30/client-side-certificate-authentication-with-nginx/
# And the official nginx dockerfile: https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/nginx.conf


user  nginx;
worker_processes  1;

error_log /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  
  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;

  access_log /dev/stdout;

  sendfile        on;
  tcp_nopush     on;

  keepalive_timeout  65;

  gzip  on;

  server {
    listen 80;
    server_name pizza.captnemo.in;
    return 301 https://pizza.captnemo.in$request_uri;
  }

  server {
    listen 443 ssl;
    server_name pizza.captnemo.in;

    ssl_protocols TLSv1.1 TLSv1.2;
    # letsencrypt certificate
    ssl_certificate /etc/pizza/cert.pem;
    ssl_certificate_key /etc/pizza/key.pem;

    # client certificate
    ssl_client_certificate /etc/pizza/ca.crt;
    # make verification optional, so we can display a 403 message to those
    # who fail authentication
    ssl_verify_client optional;
  
    location / {
      # if the client-side certificate failed to authenticate, show a 403
      # message to the client
      if ($ssl_client_verify != SUCCESS) {
        return 403;
      }

      # If client validated, send a 200 Pizza
      
    }
  }
}
